task:
  name: ClassificationTask
  params:
    backbone_name: resnet18
    backbone_params:
      pretrained: true
      in_channels: 3
    pooling_name: Pooling
    head_name: ClassificationHead
    head_params:
      num_classes: &num_classes 10
    inputs:
      - shape: [3, &height 32, &width 32]
        dtype: &input_dtype float16

joint_loss:
  losses:
    - name: CrossEntropyLoss
      mapping:
          input: prediction
          target: target

optimization:
  - optimizer: 
      name: Adam
      params:
        lr: 0.0001
    scheduler:
      name: ExponentialLR
      params:
        gamma: 0.97

data:
  TRAIN:
    - dataloader:
        batch_size: 128
        num_workers: 8
        drop_last: true
        shuffle: true
      dataset:
        name: CIFAR10
        params:
          input_dtype: *input_dtype
          train: true
          download: true
          data_folder: &data_folder ${oc.env:HOME}/.cache/torchok/cifar10/data
        transform:
          - &resize
            name: Resize
            params:
              height: *height
              width: *width
          - &normalize
            name: Normalize
            params:
              mean: [ 0.485, 0.456, 0.406 ]
              std: [ 0.229, 0.224, 0.225 ]
          - &totensor
            name: ToTensorV2
  VALID:
    # There are 2 validation datasets, for first Accuracy metric would be calculated and for the second F1Score.
    - dataloader:
        batch_size: 128
        num_workers: 8
        drop_last: false
        shuffle: false
      dataset:
        name: CIFAR10
        params:
          input_dtype: *input_dtype
          train: false
          download: false
          data_folder: *data_folder
        transform:
          - *resize
          - *normalize
          - *totensor
    - dataloader:
        batch_size: 64
        num_workers: 4
        drop_last: false
        shuffle: false
      dataset:
        name: CIFAR10
        params:
          input_dtype: *input_dtype
          train: false
          download: false
          data_folder: *data_folder
        transform:
          - *resize
          - *normalize
          - *totensor

trainer:
  accelerator: 'gpu'
  max_epochs: 30
#  limit_train_batches: 10
#  limit_val_batches: 10
#  log_every_n_steps: 1000
  precision: 16
  num_sanity_val_steps: 0

seed_params:
  seed: 42
  workers: true

logger:
  # log_dir: '${oc.env:HOME}/.cache/torchok/cifar10/logs'
  log_dir: '/workdir/cifar10/logs'
  experiment_name: resnet18
  timestamp: '${now:%Y-%m-%d}/${now:%H-%M-%S}'
  name: TensorBoardLogger

hydra:
  run:
    dir: &logs_dir '${logger.log_dir}/${logger.experiment_name}/${logger.timestamp}'

callbacks:
  - name: ModelCheckpoint
    params:
      dirpath: *logs_dir
      monitor: valid/F1Score
      save_top_k: 1
      save_last: true
      mode: max
      save_weights_only: False
  - name: FreezeUnfreeze
    params:
      freeze_modules:
#        The whole backbone will be frozen during the first 2 epochs.
          - module_name: backbone
            epoch: 2
#        Stem and the first layer of the backbone will be frozen forever during the training.
          - module_name: backbone
            stages: 1
#        Only the modules of type `_BatchNorm` that attached to the backbone will be frozen
#         with the specific policy: requires_grad of all batch norms will be set to false but
#         these modules will track
          - module_name: backbone
            module_class: _BatchNorm  # or `BatchNorm2d` for certain type of batch norm
            bn_requires_grad: false
            bn_track_running_stats: false
#        All dropouts in the network will be disabled forever during the training
#          - module_name: ""
#            module_class: Dropout
  - name: FinalizeLogger
  - name: TQDMProgressBar
    params:
      refresh_rate: 5

metrics:
  - name: Accuracy
    params:
      task: multiclass
      num_classes: 10
    mapping:
      preds: prediction
      target: target
    # indicate that for validation step this metric would be compute only for first Validation Dataloader 
    val_dataloader_idxs: [0]
  - name: F1Score
    params:
      task: multiclass
      num_classes: 10
    mapping:
      preds: prediction
      target: target
    # indicate that for validation step this metric would be compute only for second Validation Dataloader 
    val_dataloader_idxs: [1]
