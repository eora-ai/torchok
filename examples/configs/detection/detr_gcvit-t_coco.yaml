task:
  name: SingleStageDetectionTask
  params:
    backbone_name: gcvit_tiny
    backbone_params:
      pretrained: true
      in_channels: 3
      img_size: [&height 512, &width 512]
      load_relative_position_bias_table: false
    num_scales: 4
    head_name: DETRHead
    head_params:
      num_classes: &num_classes 80
      transformer:
        type: Transformer
        encoder:
          type: DetrTransformerEncoder
          num_layers: 6
          transformerlayers:
            type: BaseTransformerLayer
            attn_cfgs:
              - type: MultiheadAttention
                embed_dims: 256
                num_heads: 8
                dropout: 0.1
            feedforward_channels: 2048
            ffn_dropout: 0.1
            operation_order: ['self_attn', 'norm', 'ffn', 'norm']
        decoder:
          type: DetrTransformerDecoder
          return_intermediate: true
          num_layers: 6
          transformerlayers:
            type: DetrTransformerDecoderLayer
            attn_cfgs:
              type: MultiheadAttention
              embed_dims: 256
              num_heads: 8
              dropout: 0.1
            feedforward_channels: 2048
            ffn_dropout: 0.1
            operation_order: ['self_attn', 'norm', 'cross_attn', 'norm', 'ffn', 'norm']
      positional_encoding:
        type: SinePositionalEncoding
        num_feats: 128
        normalize: true
      train_cfg:
        assigner:
          type: HungarianAssigner
          cls_cost:
            type: ClassificationCost
            weight: 1.0
          reg_cost:
            type: BBoxL1Cost
            weight: 5.0
            box_format: xywh
          iou_cost:
            type: IoUCost
            iou_mode: giou
            weight: 2.0
      test_cfg:
        max_per_img: 100
    inputs:
      - shape: [3, *height, *width]
        dtype: &input_dtype float32

joint_loss:
  normalize_weights: false
  losses:
    - name: MMCrossEntropyLoss
      tag: loss_cls
      weight: 1.0
      params:
        use_sigmoid: false
        bg_cls_weight: 0.1
        class_weight: 1.0
#      mapping:
#        pred: flatten_cls_scores
#        target: flatten_labels
#        avg_factor: num_pos
    - name: MML1Loss
      tag: loss_bbox
      weight: 5.0
#      mapping:
#        pred: pos_decoded_bbox_preds
#        target: pos_decoded_target_preds
#        weight: pos_centerness_targets
#        avg_factor: centerness_denorm
    - name: MMGIoULoss
      tag: loss_iou
      weight: 2.0
#      mapping:
#        cls_score: pos_centerness
#        label: pos_centerness_targets
#        avg_factor: num_pos

optimization:
  - optimizer:
      name: SGD
      params:
        lr: &base_lr 0.001
        momentum: 0.9
        weight_decay: 0.0001
      paramwise_cfg:
        bias_lr_mult: 2.0
        bias_decay_mult: 0.0
    scheduler:
      name: MultiStepLR
      params:
        milestones: [23]

data:
  TRAIN:
    - dataloader:
        batch_size: &bs 8
        num_workers: &n_workers 8
        drop_last: false
        shuffle: true
      dataset:
        name: COCODetection
        params:
          train: true
          download: true
          data_folder: &data_folder ${oc.env:HOME}/coco_detection/data
          input_dtype: *input_dtype
          bbox_dtype: *input_dtype
          channel_order: 'bgr'
        augment:
          - name: HorizontalFlip
        transform:
          - &resize
            name: FitResize
            params:
              max_height: *height
              max_width: *width
          - &normalize
            name: Normalize
            params:
              mean: [102.9801, 115.9465, 122.7717]
              std: [1.0, 1.0, 1.0]
              max_pixel_value: 1.0
          - &pad
            name: PadIfNeeded
            params:
              min_height: *height
              min_width: *width
              border_mode: 0
              value: 0
          - &totensor
            name: ToTensorV2
  VALID:
    - dataloader:
        batch_size: *bs
        num_workers: *n_workers
        drop_last: false
        shuffle: false
      dataset:
        name: COCODetection
        params:
          train: false
          download: true
          data_folder: *data_folder
          input_dtype: *input_dtype
          bbox_dtype: *input_dtype
          channel_order: 'bgr'
        transform:
          - *resize
          - *normalize
          - *pad
#          - name: PadIfNeeded
#            params:
#              min_height: null
#              min_width: null
#              border_mode: 0
#              pad_height_divisor: 32
#              pad_width_divisor: 32
#              value: 0
          - *totensor

trainer:
  accelerator: 'gpu'
  max_epochs: 24
  precision: 32
  num_sanity_val_steps: 2

logger:
  log_dir: '${oc.env:HOME}/coco_detection/logs'
  experiment_name: fcos_mmresnet50_x800_1344
  timestamp: '${now:%Y-%m-%d}/${now:%H-%M-%S}'
  name: TensorBoardLogger

hydra:
  run:
    dir: &logs_dir '${logger.log_dir}/${logger.experiment_name}/${logger.timestamp}'

callbacks:
  - name: ModelCheckpoint
    params:
      dirpath: *logs_dir
      monitor: valid/MMDetMAP_50
      save_top_k: 1
      save_last: true
      mode: max
      save_weights_only: False
  - name: FinalizeLogger
  - name: TQDMProgressBar
    params:
      refresh_rate: 200

metrics:
  - name: MMDetectionMAP
    tag: MMDetMAP_50
    params:
      iou_thr: 0.5
      num_classes: *num_classes
    mapping:
      preds: prediction
      target: target
    phases: [VALID, TEST]
  - name: MMDetectionMAP
    tag: MMDetMAP_75
    params:
      iou_thr: 0.75
      num_classes: *num_classes
    mapping:
      preds: prediction
      target: target
    phases: [ VALID, TEST ]
  - name: CocoEvalMAP
    tag: CEMAP
    params:
      compute_on_step: false
      displayed_metrics: ["map", "map_50", "map_75", "map_small", "map_medium", "map_large"]
    mapping:
      preds: prediction
      target: target
    phases: [VALID, TEST]
