task:
  name: ClassificationTask
  params:
    backbone_name: resnet18
    backbone_params:
      pretrained: true
      in_channels: 3
    pooling_name: Pooling
    head_name: ClassificationHead
    head_params:
      num_classes: &num_classes 10
    inputs:
      - shape: [1, 3, &height 32, &width 32]
        dtype: 'float32'

joint_loss:
  losses:
    - name: CrossEntropyLoss
      mapping:
          input: prediction
          target: target

optimization:
  - optimizer: 
      name: Adam
      params:
        lr: 0.0001
    scheduler:
      name: ExponentialLR
      params:
        gamma: 0.97

data:
  TRAIN:
    - dataloader:
        batch_size: 8
        num_workers: 4
        drop_last: true
        shuffle: true
      dataset:
        name: CIFAR10
        params:
          train: true
          download: true
          data_folder: &data_folder ${oc.env:HOME}/.cache/torchok/data/cifar10
        transform:
          - &resize
            name: Resize
            params:
              height: *height
              width: *width
          - &normalize
            name: Normalize
            params:
              mean: [ 0.485, 0.456, 0.406 ]
              std: [ 0.229, 0.224, 0.225 ]
          - &totensor
            name: ToTensorV2
  VALID:
    - dataloader:
        batch_size: 8
        num_workers: 4
        drop_last: false
        shuffle: false
      dataset:
        name: CIFAR10
        params:
          train: false
          download: true
          data_folder: *data_folder
        transform:
          - *resize
          - *normalize
          - *totensor

trainer:
  accelerator: 'gpu'
  max_epochs: 30
  log_every_n_steps: 1000


# For MLFlowLogger and MLFlowLoggerX need to define tracking_uri in params - address of local or remote tracking server,
# if it isn't define it will be gotten from MLFLOW_TRACKING_URI - environment variable
logger:
  log_dir: '${oc.env:HOME}/.cache/torchok/logs/'
  experiment_name: cifar10
  timestamp: '${now:%Y-%m-%d}/${now:%H-%M-%S}'
  name: MLFlowLoggerX
  params:
    artifact_location: 'file://${oc.env:HOME}/.cache/torchok/logs/artifacts/'

hydra:
  run:
    dir: &logs_dir '${logger.log_dir}/${logger.experiment_name}/${logger.timestamp}'

callbacks:
  - name: ModelCheckpoint
    params:
      dirpath: *logs_dir
      monitor: valid/F1Score
      save_top_k: 1
      save_last: true
      mode: max
      save_weights_only: False
  - name: FinalizeLogger
  - name: TQDMProgressBar
    params:
      refresh_rate: 5

metrics:
  - name: Accuracy
    mapping: 
      preds: prediction
      target: target
  - name: F1Score
    mapping: 
      preds: prediction
      target: target
